{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint", "prettier"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier/@typescript-eslint",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": "error",
    "@typescript-eslint/ban-ts-ignore": "off",
    "@typescript-eslint/consistent-type-assertions": "off",
    "camelcase": "off",
    "@typescript-eslint/camelcase": ["error", {
      "properties": "never",
      "genericType": "always",
      "ignoreDestructuring": true
    }],
    /*
     * Why @typescript-eslint/no-use-before-define ?
     * From Clean Code by Robert C. Martin
     * Reading code from top to bottom -
     * The code should be readable from top to bottom.
     * Every function should be followed by the functions at the next level of abstraction.
     * If one function calls another, they should be vertically close, and the caller should be above the callee.
     */
    "@typescript-eslint/no-use-before-define": ["error", { "variables": false }],
    "@typescript-eslint/no-explicit-any": "off",
    "no-prototype-builtins": "off"
  }
}
